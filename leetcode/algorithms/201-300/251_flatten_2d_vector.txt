251. Flatten 2D Vector
Implement an iterator to flatten a 2d vector.

Example:
Input: 2d vector = 
[
  [1,2],
  [3],
  [4,5,6]
]

Output: [1, 2, 3, 4, 5, 6]

Explanation:
By calling next repeatedly until hasNext returns false,
the order of elements returned by next should be:
[1, 2, 3, 4, 5, 6].

Follow up:
As an added challenge, try to code it using only iterators in C++ or iterators in Java.

public class Vector2D {
  Iterator<List<Integer>> itrs;
  Iterator<Integer> row;

  public Vector2D(List<List<Integer>> vec2d) {
    if (vec2d == null || vec2d.size() == 0) return
    itrs = vec2d.iterator();
    row = itrs.next().iterator();
    getNextRow();
  }

  pvate void getNextRow() {
    while (!row.hasNext() && itrs.hasNext()) row = itrs.next().iterator();
  }

  public int next() {
    int next = row.next()
    getNextRow();
    return next
  }

  public boolean hasNext() {
    return row != null && row.hasNext()
  }
}