arbitrary values:
let styles = getComputedStyle(document.documentElement);
let shadow = styles.getPropertyValue("--shadow-xl");

<style>
  @reference "../../app.css";
  h1 {
    @apply text-2xl font-bold text-red-500;
  }
</style>

style={{
  "--bg-color": buttonColor,
  "--bg-color-hover": buttonColorHover,
  "--text-color": textColor,
}}
className="bg-(--bg-color) text-(--text-color) hover:bg-(--bg-color-hover) ..."


@import "tailwindcss";
@layer components {
  .btn-primary {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-violet-500);
    padding-inline: --spacing(5);
    padding-block: --spacing(2);
    font-weight: var(--font-weight-semibold);
    color: var(--color-white);
    box-shadow: var(--shadow-md);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-700);
      }
    }
  }
}


@import "tailwindcss" important;
@layer utilities {
  .flex {
    display: flex !important;
  }
  .gap-4 {
    gap: 1rem !important;
  }
  .underline {
    text-decoration-line: underline !important;
  }
}

@import "tailwindcss" prefix(tw);
@layer theme {
  :root {
    --tw-color-red-500: oklch(0.637 0.237 25.331);
  }
}
@layer utilities {
  .tw\:text-red-500 {
    color: var(--tw-color-red-500);
  }
}


block 
hidden
visible
invisible
relative
absolute 
float-left
grid 
grid-cols-3
flex 
flex-col 
flex-row
inline-flex 
items-center 
justify-center
gap-4
shrink-0
w-full
h-full
w-10
h-10 
size-12
max-w-md
max-w-2xl
max-h-[calc(100dvh-(--spacing(6))]
object-cover
inset-px
-inset-1
top-[117px]
-skew-y-3
translate-x-0.5
p-6
px-2 
py-0.5 
pt-0
pb-0
mr-4
ml-3
mx-auto
truncate
overflow-hidden
overflow-auto 
bg-violet-600 
bg-red-500!
bg-gray-900/50 
bg-(--bg-color-hover)
bg-[#316ff6] 
text-base
text-sm
text-xl
text-[22px] 
text-black
text-pink-600
text-center
placeholder-gray-400
font-medium
font-semibold
font-sans
leading-tight
tracking-widest
tracking-wide
tracking-tight
uppercase
underline
border
border-pink-500 
rounded-none
rounded-full
rounded-md
rounded-xl
rounded-[calc(var(--radius-xl)-1px)]
outline 
outline-2 
outline-sky-500 
shadow-none 
shadow-sm
shadow-md
ring 
ring-gray-900/5
stroke-pink-700
fill-(--my-brand-color)
fill-[var(--my-brand-color)]
cursor-grabbing
divide-y
divide-gray-200


https://tailwindcss.com/docs/hover-focus-and-other-states#quick-reference
https://tailwindcss.com/docs/responsive-design#container-size-reference

sm:
md:
lg:
2xl:
max-xl:
min-[320px]
max-[600px]:
md:max-xl:
@md:
@max-md:
@min-[475px]:
hover:
focus:
not-focus:
active:
invalid:
disabled:
first:
last:
even:
odd:
nth-3:
dark:
file:
marker:
selection:
portrait:
landscape:
first-letter:
first-line: 
*:
**:

*:px-2 
dark:*:bg-sky-500/10

has-checked:bg-indigo-50
has-[:focus]
has-[img]

group
  group-has-[a]:block 
  group-hover:stroke-white
  in-focus:opacity-100

group is-published
  group-[.is-published]:block

group/item
  group/edit invisible group-hover/item:visible
    group-hover/edit:translate-x-0.5

peer
peer-has-checked:hidden

@container
  @md:flex-row

@container/main
  @sm/main:flex-col

@container
  w-[50cqw]

*:border *:border-sky-100 

**:data-avatar:size-12 
  data-avatar

[&_p]:mt-4
  p

[&.is-dragging]:active:cursor-grabbing

lg:[&:nth-child(-n+3)]:hover:underline

grid-cols-[1fr_500px_2fr]
grid-cols-[24rem_2.5rem_minmax(0,1fr)]

divide-y
.divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}


https://tailwindcss.com/docs/dark-mode
prefers-color-scheme

@import "tailwindcss";
@custom-variant dark (&:where(.dark, .dark *));
<html class="dark">

document.documentElement.classList.toggle(
  "dark",
  localStorage.theme === "dark" ||
    (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches),
);
localStorage.theme = "light";
localStorage.theme = "dark";
localStorage.removeItem("theme");


https://tailwindcss.com/docs/theme#theme-variable-namespaces
https://tailwindcss.com/docs/theme#default-theme-variable-reference
theme variables

@import "tailwindcss";
@theme {
  --*: initial;
  --color-*: initial;
  --color-primary: var(--color-red-500);
  --color-secondary: var(--color-blue-500);
  --color-mint-500: oklch(0.72 0.11 178);
  --font-poppins: Poppins, sans-serif;
  --breakpoint-3xl: 120rem;
  --container-8xl: 96rem;
}
bg-mint-500
background-color: var(--color-mint-500)
font-poppins
3xl:grid-cols-6
@container
  @8xl:flex-row

:root - without utility classes
@theme static  - always generating all css variables

@import "tailwindcss";
@import "../brand/theme.css";

@import "tailwindcss";
:root {
  --acme-canvas-color: oklch(0.967 0.003 264.542);
}
[data-theme="dark"] {
  --acme-canvas-color: oklch(0.21 0.034 264.665);
}
@theme inline {
  --color-canvas: var(--acme-canvas-color);
}

https://tailwindcss.com/docs/adding-custom-styles

text-(length:--my-var)
text-(color:--my-var)

[--gutter-width:1rem] lg:[--gutter-width:2rem]
[mask-type:luminance] hover:[mask-type:alpha]
[--scroll-offset:56px] lg:[--scroll-offset:44px]

bg-[url('/what_a_rush.png')]
before:content-['hello\_world']
String.raw`before:content-['hello\_world']`

@layer base {
  h1 {
    font-size: var(--text-2xl);
  }
  h2 {
    font-size: var(--text-xl);
  }
}

@layer components {
  .card {
    background-color: var(--color-white);
    border-radius: var(--rounded-lg);
    padding: var(--spacing-6);
    box-shadow: var(--shadow-xl);
  }

  .my-element {
    background: white;
    @variant dark {
      @variant hover {
        background: black;
      }
    }
  }
}


@utility content-auto {
  content-visibility: auto;
}

@utility scrollbar-hidden {
  &::-webkit-scrollbar {
    display: none;
  }
}

@theme {
  --tab-size-2: 2;
  --tab-size-4: 4;
  --tab-size-github: 8;
}
@utility tab-* {
  tab-size: --value(--tab-size-*);
}
tab-2, tab-4 and tab-github

@utility text-* {
  font-size: --value(--text-*, [length]);
  line-height: --modifier(--leading-*, [length], [*]);
}

https://examples.motion.dev/
https://www.react-spring.dev/ 